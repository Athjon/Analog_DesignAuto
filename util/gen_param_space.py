from collections import OrderedDict


def gen_param_space(param_range_dict):
    """
    Process a YAML file to create an OrderedDict containing all possible param values.

    Parameters:
    file_path (str): The path to the YAML file to be processed.

    Returns:
    OrderedDict: An ordered dictionary with param names and their corresponding param value lists.
    """

    def parse_value_range_ascending(value_range_define, step_num, integer_flag=False):
        """
        Parse the range and step to create a sorted list of values in ascending order.
        Convert to integers if is_integer is True.

        Parameters:
        value_range (list): The start and end values of the range.
        step (float or str): The step value for generating the range.
        is_integer (bool): Flag to convert values to integers if True.

        Returns:
        list: A list of values in the specified range and step, in ascending order and str type.
        """
        start, end = value_range_define
        # Check if start is a string to find magnitude character, otherwise treat as float
        if isinstance(start, str):
            magnitude = ''.join(filter(str.isalpha, start))
            start, end, step_num = [float(x.replace(magnitude, '')) for x in [start, end, step_num]]
        else:
            magnitude = ''
            start, end, step_num = float(start), float(end), float(step_num)

        # Generate the list of values in ascending order
        if start == end:
            values = [start]
        else:
            values = [start + i * step_num for i in range(round((end - start) / step_num) + 1)]
            if values[-1] > end + 1e-7:
                values.pop()
        if integer_flag:
            # Convert values to integers if required
            values = [str(int(value)) for value in values]
        else:
            # Add the magnitude character back (if any)
            values = [f"{round(value, 3)}{magnitude}" if magnitude else str(value) for value in values]

        return values

    result = OrderedDict()
    for key, value in param_range_dict.items():
        for param in value['params']:
            variable_name = param['variable_name']
            value_range = param['value']['range']
            step = param['value']['step']
            # Check if the variable name starts with 'nf_' to determine if it should be integer
            is_integer = variable_name.startswith('nf_')
            result[variable_name] = parse_value_range_ascending(value_range, step, is_integer)

    return result


# Test Code
# processed_data_test = "../config_3/param_range.yaml"
# param_space = gen_param_space(processed_data_test)
# print(param_space)

# Output
# OrderedDict([('w_M14_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u',
# '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('l_M14', ['0.5u',
# '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u',
# '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M14', ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11',
# '12', '13', '14', '15', '16', '17', '18', '19', '20']), ('w_M35_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u',
# '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u',
# '9.5u', '10.0u']), ('l_M35', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u',
# '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M35', ['1', '2', '3', '4',
# '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']), ('w_M25_per_finger',
# ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u',
# '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('l_M25', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u',
# '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']),
# ('nf_M25', ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18',
# '19', '20']), ('w_M13_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u',
# '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('l_M13', ['0.5u', '1.0u',
# '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u',
# '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M13', ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13',
# '14', '15', '16', '17', '18', '19', '20']), ('w_M12_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u',
# '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']),
# ('l_M12', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u',
# '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M12', ['1', '2', '3', '4', '5', '6', '7', '8', '9',
# '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']), ('w_M11_per_finger', ['0.5u', '1.0u', '1.5u',
# '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u',
# '9.0u', '9.5u', '10.0u']), ('l_M11', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u',
# '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M11', ['1', '2',
# '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']),
# ('w_M20_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u',
# '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('l_M20', ['0.5u', '1.0u', '1.5u',
# '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u',
# '9.0u', '9.5u', '10.0u']), ('nf_M20', ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14',
# '15', '16', '17', '18', '19', '20']), ('w_M19_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u',
# '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']),
# ('l_M19', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u',
# '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M19', ['1', '2', '3', '4', '5', '6', '7', '8', '9',
# '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']), ('w_M36_per_finger', ['0.5u', '1.0u', '1.5u',
# '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u',
# '9.0u', '9.5u', '10.0u']), ('l_M36', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u',
# '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M36', ['1', '2',
# '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']),
# ('w_M16_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u',
# '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('l_M16', ['0.5u', '1.0u', '1.5u',
# '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u',
# '9.0u', '9.5u', '10.0u']), ('nf_M16', ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14',
# '15', '16', '17', '18', '19', '20']), ('w_M24_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u',
# '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']),
# ('l_M24', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u',
# '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M24', ['1', '2', '3', '4', '5', '6', '7', '8', '9',
# '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']), ('w_M23_per_finger', ['0.5u', '1.0u', '1.5u',
# '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u',
# '9.0u', '9.5u', '10.0u']), ('l_M23', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u',
# '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M23', ['1', '2',
# '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']),
# ('w_M22_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u',
# '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('l_M22', ['0.5u', '1.0u', '1.5u',
# '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u',
# '9.0u', '9.5u', '10.0u']), ('nf_M22', ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14',
# '15', '16', '17', '18', '19', '20']), ('w_M21_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u',
# '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']),
# ('l_M21', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u',
# '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M21', ['1', '2', '3', '4', '5', '6', '7', '8', '9',
# '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']), ('w_M18_per_finger', ['0.5u', '1.0u', '1.5u',
# '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u',
# '9.0u', '9.5u', '10.0u']), ('l_M18', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u',
# '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('nf_M18', ['1', '2',
# '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']),
# ('w_M17_per_finger', ['0.5u', '1.0u', '1.5u', '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u',
# '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u', '9.0u', '9.5u', '10.0u']), ('l_M17', ['0.5u', '1.0u', '1.5u',
# '2.0u', '2.5u', '3.0u', '3.5u', '4.0u', '4.5u', '5.0u', '5.5u', '6.0u', '6.5u', '7.0u', '7.5u', '8.0u', '8.5u',
# '9.0u', '9.5u', '10.0u']), ('nf_M17', ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14',
# '15', '16', '17', '18', '19', '20']), ('IB', ['1.0u', '2.0u', '3.0u', '4.0u', '5.0u', '6.0u', '7.0u', '8.0u',
# '9.0u', '10.0u', '11.0u', '12.0u', '13.0u', '14.0u', '15.0u', '16.0u', '17.0u', '18.0u', '19.0u', '20.0u', '21.0u',
# '22.0u', '23.0u', '24.0u', '25.0u', '26.0u', '27.0u', '28.0u', '29.0u', '30.0u', '31.0u', '32.0u', '33.0u',
# '34.0u', '35.0u', '36.0u', '37.0u', '38.0u', '39.0u', '40.0u', '41.0u', '42.0u', '43.0u', '44.0u', '45.0u',
# '46.0u', '47.0u', '48.0u', '49.0u', '50.0u'])])
